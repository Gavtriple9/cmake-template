#!/usr/bin/env python3

import os

THIS_FILE = os.path.abspath(__file__)
ROOT_DIR = os.path.dirname(THIS_FILE)
TEMPLATE_EXT = ".ini"


def envsubst(input_dir: str, output_dir: str):
    directory = os.listdir(input_dir)
    for file in directory:
        if file.endswith(TEMPLATE_EXT):
            # Replace the variables in the file
            os.system(
                f"envsubst < {input_dir}/{file} > {output_dir}/{file.replace(TEMPLATE_EXT, '')}"
            )
            # delete the original file
            os.system(f"rm {input_dir}/{file}")
        else:
            # Copy the file to the project directory
            os.system(f"cp {input_dir}/{file} {output_dir}/{file}")


def delete_dir(directory: str):
    os.system(f"rm -rf {directory}")


def main():
    env_file = os.path.join(ROOT_DIR, ".env")
    if os.path.exists(env_file):
        with open(env_file) as f:
            for line in f:
                if line.strip() and not line.startswith("#"):
                    key, value = line.strip().split("=", 1)
                    os.environ[key] = value.replace('"', "")

    project_name = os.getenv("PROJECT_NAME")
    project_version = os.getenv("PROJECT_VERSION")
    project_desc = os.getenv("PROJECT_DESC")
    author_first = os.getenv("AUTHOR_FIRST")
    author_last = os.getenv("AUTHOR_LAST")
    author_email = os.getenv("AUTHOR_EMAIL")
    organization = os.getenv("ORGANIZATION")

    print(f"Project Name: {project_name}")
    print(f"Project Version: {project_version}")
    print(f"Project Description: {project_desc}")
    print(f"Author: {author_first} {author_last}")
    print(f"Author Email: {author_email}")
    print(f"Organization: {organization}")

    if not project_name:
        print("Project Name is required")
        return

    INPUT_DIRS = [
        os.path.join(ROOT_DIR, "src"),
        os.path.join(ROOT_DIR, "include", "PROJ_NAME"),
        os.path.join(ROOT_DIR, "test"),
        os.path.join(ROOT_DIR, "src"),
    ]

    for input_dir in INPUT_DIRS:
        print(f"Processing input directory: {input_dir}")
        if not os.path.exists(input_dir):
            print(f"Input directory {input_dir} does not exist.")
            return


if __name__ == "__main__":
    main()
